- name: for each host, scan for its ssh public key
  delegate_to: localhost
  with_items: '{{ inventory_hostname }}'
  shell: "ssh-keyscan {{ item }},{{ lookup ('dig', item) }}"
  ignore_errors: yes
  register: keyscan


- shell: 'cat {{ lookup("env", "HOME") }}/.ssh/known_hosts'
  delegate_to: localhost
  become: yes
  register: cat
- name: 'cat {{ lookup("env", "HOME") }}/.ssh/known_hosts'
  debug:
    msg: '{{ cat.stdout_lines }}'


- name: 'check if {{ inventory_hostname }} still has the same IP address'
  delegate_to: localhost
  when: keyscan is failed
  check_mode: yes
  with_items: '{{ inventory_hostname }}'
  replace:
    path: '{{ lookup("env", "HOME") }}/.ssh/known_hosts'
    regexp: '^({{ item | replace(".", "\.") }}),(\d+\.\d+\.\d+\.\d+)(\s.*)'
    replace: '\1,{{ lookup ("dig", item) }}\3'
  register: search
  failed_when: (search is changed) or (search is failed)
  fail:
    msg: 'The IP address has changed.'
  

- name: remove the public host key in the '{{ ssh_known_hosts_file }}'
  delegate_to: localhost
  when: result.rc == '0'
  loop: '{{ keyscan.results }}'
  loop_control:
    loop_var: result
  known_hosts:
    name: "{{ result.item }}"
    state: "absent"
    path: "{{ ssh_known_hosts_file }}"


- name: add/update the public host key in the '{{ ssh_known_hosts_file }}'
  delegate_to: localhost
  when: result.rc == '0'
  loop: '{{ keyscan.results }}'
  loop_control:
    loop_var: result
  known_hosts:
    name: "{{ result.item }}"
    key: "{{ result.stdout }}"
    state: "present"
    path: "{{ ssh_known_hosts_file }}"
  

  
